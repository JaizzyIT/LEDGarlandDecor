;/*
; * garland.c
; *
; * Created: 12-Dec-21 17:41:43
; * Author: JaizzY
; */
;
;#include <io.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x18
;PCODE: $00000004 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000005 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000006 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $00000007 VOL: 0
	#endif
;PCODE: $00000008 VOL: 0
;PCODE: $00000009 VOL: 0
;#include <delay.h>
;#include <bits_macros.h>
;#include <stdint.h>
;#include <eeprom.h>
;
;#define BASIC_BRIGHT 100
;#define MAX_BRIGHT 240
;#define MIN_BRIGHT 1
;#define HALF_BRIGHT MAX_BRIGHT/2
;#define BRIGHT_RANGE (MAX_BRIGHT - MIN_BRIGHT)
;
;#define BASIC_FREQ 20
;#define MAX_FREQ 255
;#define MIN_FREQ 2
;#define FREQ_RANGE (MAX_FREQ - MIN_FREQ)
;
;#define MAX_PAUSE 7000
;#define MIN_PAUSE 100
;#define PAUSE_RANGE (MAX_PAUSE - MIN_PAUSE)
;
;#define RANGE_RATE_FQ_PS (PAUSE_RANGE/FREQ_RANGE)
;#define RANGE_RATE_BR_PS (PAUSE_RANGE/BRIGHT_RANGE)
;
;#define BUTTON 3
;
;#define CHANGE_RATE 75
;#define BUTT_TMIER_TOP 2500
;#define EEPROM_TIMER_TOP 30000
;#define TRUE 1
;#define FALSE 0
;
;#define PWM_STOP 0b00000011
;#define PWM_ON 0b00100011 //OC0B					//0b00100011 - OC0B, 0b10000011 - OC0A
;
;uint8_t brightness, brightness_prev, blink_max_bright;
;uint8_t frequency, frequency_prev;
;uint8_t EEMEM eeprom_bright;
;uint8_t EEMEM eeprom_freq;
;//uint8_t EEMEM eeprom_blink;
;uint16_t butt_timer;
;uint16_t pause_timer;
;uint16_t blink_timer;
;uint16_t eeprom_timer;
;uint16_t change_timer;
;uint16_t pause_top;
;uint16_t br_to_ps_range;
;
;_Bool bright_increase = FALSE;
;_Bool freq_increase = FALSE;
;_Bool butt_pressed = FALSE;
;_Bool blink = FALSE;
;_Bool LED_change = FALSE;
;_Bool save_to_eeprom = FALSE;
;_Bool pause = FALSE;
;
;interrupt [TIM0_OVF] void timer2_ovf_int (void){
; 0000 0040 interrupt [4] void timer2_ovf_int (void){

	.CSEG
;PCODE: $0000000A VOL: 0
;PCODE: $0000000B VOL: 0
; 0000 0041 	if (butt_pressed){
;PCODE: $0000000C VOL: 0
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0042 		if (butt_timer < BUTT_TMIER_TOP) butt_timer++;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0043 	}
;PCODE: $00000015 VOL: 0
; 0000 0044 
; 0000 0045 	if (blink){
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0046 		if (blink_timer < frequency) blink_timer++;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0047 	}
;PCODE: $00000023 VOL: 0
; 0000 0048 
; 0000 0049 	if (LED_change){
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 004A 		if (change_timer < CHANGE_RATE) change_timer++;
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 004B 	}
;PCODE: $0000002F VOL: 0
; 0000 004C 
; 0000 004D 	if (save_to_eeprom){
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 004E 		if (eeprom_timer < EEPROM_TIMER_TOP) eeprom_timer++;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 004F 	}
;PCODE: $0000003B VOL: 0
; 0000 0050 
; 0000 0051 	if (pause){
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 0052 		if (pause_timer < pause_top) pause_timer++;
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 0053 	}
;PCODE: $00000046 VOL: 0
; 0000 0054 }
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;
;void pause_calc (void){
; 0000 0056 void pause_calc (void){
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 0057 	if (brightness_prev < HALF_BRIGHT) {
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 0058 		pause_top = ((((frequency - MIN_FREQ) * RANGE_RATE_FQ_PS) + MIN_PAUSE) + br_to_ps_range) >> 1;
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 0059 	}
; 0000 005A 	else pause_top = (((frequency - MIN_FREQ) * RANGE_RATE_FQ_PS) + MIN_PAUSE);
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 005B }
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;
;void main(void)
; 0000 005E {
;PCODE: $00000067 VOL: 0
; 0000 005F 	DDRB = 0b00000011;														//B0 - out, PWM channel A; button pin B3
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 0060 	PORTB = 0b00001000;														//butt pin pull-up
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 0061 
; 0000 0062 	brightness = eeprom_read_byte(&eeprom_bright);							//rewriting from EEPROM to brightness
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0000 0063 	frequency = eeprom_read_byte(&eeprom_freq);
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 0064 //	blink = eeprom_read_byte(&eeprom_blink);
; 0000 0065 
; 0000 0066 	if (brightness > MAX_BRIGHT) {											//if eeprom is reset rewriting default brightness from EEPROM to 'brightness'
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 0067 		brightness = BASIC_BRIGHT;
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0000 0068 		eeprom_write_byte(&eeprom_bright, brightness);
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 0069 	}
; 0000 006A 
; 0000 006B 	brightness_prev = brightness;
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; 0000 006C 	frequency_prev = frequency;
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 006D //	brightness_prev = brightness;
; 0000 006E 
; 0000 006F 	if (brightness >= MAX_BRIGHT - 50) bright_increase = TRUE;
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0000 0070 	if (brightness <= MIN_BRIGHT + 50) bright_increase = FALSE;
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0000 0071 
; 0000 0072 	if (frequency >= MAX_FREQ - 50) freq_increase = TRUE;
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
; 0000 0073 	if (frequency <= MIN_FREQ + 50) freq_increase = FALSE;
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
; 0000 0074 
; 0000 0075 	br_to_ps_range = (((brightness_prev - MIN_BRIGHT) * RANGE_RATE_BR_PS) + MIN_PAUSE);
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
; 0000 0076 	pause_calc();
;PCODE: $0000009E VOL: 0
; 0000 0077 
; 0000 0078 	while (BitIsClear(PINB, BUTTON)) blink = TRUE;
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0000 007A TCCR0A = 0b00100011 ;
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0000 007B 	TCCR0B = 0b00000001;
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0000 007C 	TIMSK0 = 0b00000010;													//timer 0 overflow interrupt enable
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0000 007D 
; 0000 007E 	OCR0B = brightness;
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
; 0000 007F 
; 0000 0080 	#asm("sei");
;PCODE: $000000AF VOL: 0
	sei
;PCODE: $000000B0 VOL: 0
; 0000 0081 
; 0000 0082 	while (1)
;PCODE: $000000B1 VOL: 0
; 0000 0083 	{
; 0000 0084 		if (BitIsClear(PINB, BUTTON)) butt_pressed = TRUE;
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
; 0000 0085 		else if (butt_pressed){
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
; 0000 0086 			butt_pressed = FALSE;
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
; 0000 0087 			butt_timer = 0;
;PCODE: $000000BE VOL: 0
; 0000 0088 			LED_change = FALSE;
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
; 0000 0089 			if ((brightness_prev != brightness) || (frequency_prev != frequency)) save_to_eeprom = TRUE;
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
; 0000 008A 		}
;PCODE: $000000CB VOL: 0
; 0000 008B 
; 0000 008C 		if (eeprom_timer == EEPROM_TIMER_TOP) {
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
; 0000 008D 			if (blink) {
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
; 0000 008E 				eeprom_write_byte(&eeprom_freq, frequency);
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
; 0000 008F 				frequency_prev = frequency;
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
; 0000 0090 			}
; 0000 0091 			else {
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
; 0000 0092 				eeprom_write_byte(&eeprom_bright, brightness);
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
; 0000 0093 				brightness_prev = brightness;
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
; 0000 0094 			}
;PCODE: $000000E0 VOL: 0
; 0000 0095 
; 0000 0096 			eeprom_timer = 0;
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
; 0000 0097 			save_to_eeprom = FALSE;
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
; 0000 0098 			TCCR0A = PWM_STOP;
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
; 0000 0099 			delay_ms(20);
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
; 0000 009A 			TCCR0A = PWM_ON;
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
; 0000 009B 		}
; 0000 009C 
; 0000 009D 		if (butt_pressed){
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
; 0000 009E 			if (butt_timer == BUTT_TMIER_TOP){
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
; 0000 009F 				if (!blink) bright_increase = !bright_increase;
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
; 0000 00A0 				else freq_increase = !freq_increase;
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
; 0000 00A1 
; 0000 00A2 				LED_change = TRUE;
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
; 0000 00A3 				butt_timer++;
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
; 0000 00A4 				eeprom_timer = 0;
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
; 0000 00A5 				save_to_eeprom = FALSE;
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
; 0000 00A6 				TCCR0A = PWM_STOP;
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
; 0000 00A7 				delay_ms(10);
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
; 0000 00A8 				TCCR0A = PWM_ON;
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
; 0000 00A9 			}
; 0000 00AA 		}
;PCODE: $0000010F VOL: 0
; 0000 00AB 
; 0000 00AC 		if (!blink){
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
; 0000 00AD 			if (change_timer >= CHANGE_RATE){
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
; 0000 00AE 				if (bright_increase == TRUE){
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
; 0000 00AF 					if (brightness < MAX_BRIGHT) brightness++;
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
; 0000 00B0 					else {
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
; 0000 00B1 						TCCR0A = PWM_STOP;
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
; 0000 00B2 						delay_ms(10);
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
; 0000 00B3 						TCCR0A = PWM_ON;
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
; 0000 00B4 					}
;PCODE: $00000127 VOL: 0
; 0000 00B5 				}
; 0000 00B6 				else{
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
; 0000 00B7 					if (brightness > MIN_BRIGHT) brightness--;
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
; 0000 00B8 					else {
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
; 0000 00B9 						TCCR0A = PWM_STOP;
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
; 0000 00BA 						delay_ms(30);
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
; 0000 00BB 						TCCR0A = PWM_ON;
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
; 0000 00BC 					}
;PCODE: $00000137 VOL: 0
; 0000 00BD 				}
;PCODE: $00000138 VOL: 0
; 0000 00BE 				OCR0B = brightness;
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
; 0000 00BF 				change_timer = 0;
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
; 0000 00C0 			}
; 0000 00C1 		}
;PCODE: $0000013D VOL: 0
; 0000 00C2 		else{
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
; 0000 00C3 			if (blink_timer >= frequency){
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
; 0000 00C4 				if (bright_increase == TRUE){
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
; 0000 00C5 					if (brightness < brightness_prev) brightness++;
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
; 0000 00C6 					else {
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
; 0000 00C7 						pause = TRUE;
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
; 0000 00C8 						if (pause_timer >= pause_top>>1){
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
; 0000 00C9 							{
; 0000 00CA 								bright_increase = FALSE;
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
; 0000 00CB 								pause_timer = 0;
;PCODE: $00000156 VOL: 0
; 0000 00CC 								pause = FALSE;
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
; 0000 00CD 							}
; 0000 00CE 						}
; 0000 00CF 					}
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
; 0000 00D0 				}
; 0000 00D1 				else{
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
; 0000 00D2 					if (brightness > 0) brightness--;
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
; 0000 00D3 					else {
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
; 0000 00D4 						TCCR0A = PWM_STOP;
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
; 0000 00D5 						pause = TRUE;
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
; 0000 00D6 						if (pause_timer >= pause_top){
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
; 0000 00D7 							{
; 0000 00D8 								TCCR0A = PWM_ON;
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
; 0000 00D9 								bright_increase = TRUE;
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
; 0000 00DA 								pause_timer = 0;
;PCODE: $0000016E VOL: 0
; 0000 00DB 								pause = FALSE;
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
; 0000 00DC 							}
; 0000 00DD 						}
; 0000 00DE 					}
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
; 0000 00DF 				}
;PCODE: $00000173 VOL: 0
; 0000 00E0 				blink_timer = 0;
;PCODE: $00000174 VOL: 0
; 0000 00E1 				OCR0B = brightness;
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
; 0000 00E2 			}
; 0000 00E3 
; 0000 00E4 			if (change_timer >= CHANGE_RATE){
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
; 0000 00E5 				if (freq_increase == TRUE){
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
; 0000 00E6 					if (frequency < MAX_FREQ) frequency++;
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
; 0000 00E7 					else{
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
; 0000 00E8 						TCCR0A = PWM_STOP;
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
; 0000 00E9 						delay_ms(30);
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
; 0000 00EA 						TCCR0A = PWM_ON;
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
; 0000 00EB 						}
;PCODE: $0000018B VOL: 0
; 0000 00EC 					pause_calc();
;PCODE: $0000018C VOL: 0
; 0000 00ED 				}
; 0000 00EE 				else{
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
; 0000 00EF 					if (frequency > MIN_FREQ) frequency--;
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
; 0000 00F0 					pause_calc();
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
; 0000 00F1 				}
;PCODE: $00000195 VOL: 0
; 0000 00F2 			 change_timer = 0;
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
; 0000 00F3 			}
; 0000 00F4 		}
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
; 0000 00F5 	}
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
; 0000 00F6 }
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
